solc: 0.5.11+commit.c082d0b4.Emscripten.clang
Truffle v5.1.0 (core: 5.1.0)
Solidity - 0.5.11 (solc-js)
Node v12.13.0
Web3.js v1.2.2


Compiling your contracts...
===========================
> Compiling ./contracts/UPIToken.sol



  Contract: MyToken
    ERC-20
      totalSupply()
        ✓ should have initial supply of 1000000000000000000000000000 (51ms)
        ✓ should return the correct supply (655ms)
      balanceOf(_owner)
        ✓ should have correct initial balances (42ms)
        ✓ should return the correct balances (554ms)
      allowance(_owner, _spender)
        ✓ should have correct initial allowance (60ms)
        ✓ should return the correct allowance (1359ms)
        when (_owner != _spender)
          ✓ should return the correct allowance (171ms)
        when (_owner == _spender)
          ✓ should return the correct allowance (125ms)
      approve(_spender, _value)
        when (_spender != sender)
          ✓ should return true when approving 0 (62ms)
          ✓ should return true when approving (60ms)
          ✓ should return true when updating approval (501ms)
          ✓ should return true when revoking approval (151ms)
          ✓ should update allowance accordingly (582ms)
          ✓ should fire Approval event (257ms)
          ✓ should fire Approval when allowance was set to 0 (239ms)
          ✓ should fire Approval even when allowance did not change (410ms)
        when (_spender == sender)
          ✓ should return true when approving 0 (48ms)
          ✓ should return true when approving (51ms)
          ✓ should return true when updating approval (422ms)
          ✓ should return true when revoking approval (155ms)
          ✓ should update allowance accordingly (491ms)
          ✓ should fire Approval event (136ms)
          ✓ should fire Approval when allowance was set to 0 (244ms)
          ✓ should fire Approval even when allowance did not change (359ms)
      transfer(_to, _value)
        when (_to != sender)
          ✓ should return true when called with amount of 0 (46ms)
          ✓ should return true when transfer can be made, false otherwise (723ms)
          ✓ should revert when trying to transfer something while having nothing (236ms)
          ✓ should revert when trying to transfer more than balance (661ms)
          ✓ should not affect totalSupply (430ms)
          ✓ should update balances accordingly (683ms)
          ✓ should fire Transfer event (362ms)
          ✓ should fire Transfer event when transferring amount of 0 (193ms)
        when (_to == sender)
          ✓ should return true when called with amount of 0 (55ms)
          ✓ should return true when transfer can be made, false otherwise (650ms)
          ✓ should revert when trying to transfer something while having nothing (194ms)
          ✓ should revert when trying to transfer more than balance (580ms)
          ✓ should not affect totalSupply (419ms)
          ✓ should update balances accordingly (947ms)
          ✓ should fire Transfer event (561ms)
          ✓ should fire Transfer event when transferring amount of 0 (117ms)
      transferFrom(_from, _to, _value)
        ✓ should revert when trying to transfer while not allowed at all (1401ms)
        ✓ should fire Transfer event when transferring amount of 0 and sender is not approved (178ms)
        when (_from != _to and _to != sender)
          ✓ should return true when called with amount of 0 and sender is approved (566ms)
          ✓ should return true when called with amount of 0 and sender is not approved (133ms)
          ✓ should return true when transfer can be made, false otherwise (2281ms)
          ✓ should revert when trying to transfer something while _from having nothing (145ms)
          ✓ should revert when trying to transfer more than balance of _from (375ms)
          ✓ should revert when trying to transfer more than allowed (296ms)
          ✓ should not affect totalSupply (926ms)
          ✓ should update balances accordingly (935ms)
          ✓ should update allowances accordingly (1405ms)
          ✓ should fire Transfer event (871ms)
          ✓ should fire Transfer event when transferring amount of 0 (300ms)
        when (_from != _to and _to == sender)
          ✓ should return true when called with amount of 0 and sender is approved (176ms)
          ✓ should return true when called with amount of 0 and sender is not approved (64ms)
          ✓ should return true when transfer can be made, false otherwise (775ms)
          ✓ should revert when trying to transfer something while _from having nothing (495ms)
          ✓ should revert when trying to transfer more than balance of _from (477ms)
          ✓ should revert when trying to transfer more than allowed (801ms)
          ✓ should not affect totalSupply (1008ms)
          ✓ should update balances accordingly (1359ms)
          ✓ should update allowances accordingly (1203ms)
          ✓ should fire Transfer event (541ms)
          ✓ should fire Transfer event when transferring amount of 0 (176ms)
        when (_from == _to and _to != sender)
          ✓ should return true when called with amount of 0 and sender is approved (49ms)
          ✓ should return true when called with amount of 0 and sender is not approved (49ms)
          ✓ should return true when transfer can be made, false otherwise (1330ms)
          ✓ should revert when trying to transfer something while _from having nothing (523ms)
          ✓ should revert when trying to transfer more than balance of _from (335ms)
          ✓ should revert when trying to transfer more than allowed (494ms)
          ✓ should not affect totalSupply (489ms)
          ✓ should update balances accordingly (1155ms)
          ✓ should update allowances accordingly (1209ms)
          ✓ should fire Transfer event (580ms)
          ✓ should fire Transfer event when transferring amount of 0 (218ms)
        when (_from == _to and _to == sender)
          ✓ should return true when called with amount of 0 and sender is approved (107ms)
          ✓ should return true when called with amount of 0 and sender is not approved (135ms)
          ✓ should return true when transfer can be made, false otherwise (1868ms)
          ✓ should revert when trying to transfer something while _from having nothing (146ms)
          ✓ should revert when trying to transfer more than balance of _from (231ms)
          ✓ should revert when trying to transfer more than allowed (449ms)
          ✓ should not affect totalSupply (331ms)
          ✓ should update balances accordingly (1062ms)
          ✓ should update allowances accordingly (716ms)
          ✓ should fire Transfer event (249ms)
          ✓ should fire Transfer event when transferring amount of 0 (114ms)
    ERC-20 optional
      name()
        ✓ should return 'Pawtocol Network UPI Token' (365ms)
      symbol()
        ✓ should return 'UPI' (58ms)
      decimals()
        ✓ should return '18' (332ms)


  89 passing (2m)
