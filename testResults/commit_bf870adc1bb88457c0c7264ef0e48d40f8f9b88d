Truffle v5.1.0 (core: 5.1.0)
Solidity - 0.5.11 (solc-js)
Node v12.13.1
Web3.js v1.2.2


Compiling your contracts...
===========================
> Compiling ./contracts/UPIToken.sol



  Contract: MyToken
    ERC-20
      totalSupply()
        ✓ should have initial supply of 1000000000000000000000000000
        ✓ should return the correct supply (435ms)
      balanceOf(_owner)
        ✓ should have correct initial balances (41ms)
        ✓ should return the correct balances (271ms)
      allowance(_owner, _spender)
        ✓ should have correct initial allowance
        ✓ should return the correct allowance (575ms)
        when (_owner != _spender)
          ✓ should return the correct allowance (107ms)
        when (_owner == _spender)
          ✓ should return the correct allowance (72ms)
      approve(_spender, _value)
        when (_spender != sender)
          ✓ should return true when approving 0 (43ms)
          ✓ should return true when approving
          ✓ should return true when updating approval (215ms)
          ✓ should return true when revoking approval (102ms)
          ✓ should update allowance accordingly (277ms)
          ✓ should fire Approval event (154ms)
          ✓ should fire Approval when allowance was set to 0 (159ms)
          ✓ should fire Approval even when allowance did not change (203ms)
        when (_spender == sender)
          ✓ should return true when approving 0 (41ms)
          ✓ should return true when approving
          ✓ should return true when updating approval (201ms)
          ✓ should return true when revoking approval (79ms)
          ✓ should update allowance accordingly (280ms)
          ✓ should fire Approval event (51ms)
          ✓ should fire Approval when allowance was set to 0 (165ms)
          ✓ should fire Approval even when allowance did not change (270ms)
      transfer(_to, _value)
        when (_to != sender)
          ✓ should return true when called with amount of 0 (54ms)
          ✓ should return true when transfer can be made, false otherwise (344ms)
          ✓ should revert when trying to transfer something while having nothing (113ms)
          ✓ should revert when trying to transfer more than balance (271ms)
          ✓ should not affect totalSupply (172ms)
          ✓ should update balances accordingly (374ms)
          ✓ should fire Transfer event (142ms)
          ✓ should fire Transfer event when transferring amount of 0 (71ms)
        when (_to == sender)
          ✓ should return true when called with amount of 0
          ✓ should return true when transfer can be made, false otherwise (326ms)
          ✓ should revert when trying to transfer something while having nothing (84ms)
          ✓ should revert when trying to transfer more than balance (375ms)
          ✓ should not affect totalSupply (306ms)
          ✓ should update balances accordingly (426ms)
          ✓ should fire Transfer event (183ms)
          ✓ should fire Transfer event when transferring amount of 0 (59ms)
      transferFrom(_from, _to, _value)
        ✓ should revert when trying to transfer while not allowed at all (263ms)
        ✓ should fire Transfer event when transferring amount of 0 and sender is not approved (82ms)
        when (_from != _to and _to != sender)
          ✓ should return true when called with amount of 0 and sender is approved (55ms)
          ✓ should return true when called with amount of 0 and sender is not approved (52ms)
          ✓ should return true when transfer can be made, false otherwise (526ms)
          ✓ should revert when trying to transfer something while _from having nothing (110ms)
          ✓ should revert when trying to transfer more than balance of _from (203ms)
          ✓ should revert when trying to transfer more than allowed (227ms)
          ✓ should not affect totalSupply (250ms)
          ✓ should update balances accordingly (657ms)
          ✓ should update allowances accordingly (603ms)
          ✓ should fire Transfer event (205ms)
          ✓ should fire Transfer event when transferring amount of 0 (75ms)
        when (_from != _to and _to == sender)
          ✓ should return true when called with amount of 0 and sender is approved (68ms)
          ✓ should return true when called with amount of 0 and sender is not approved (67ms)
          ✓ should return true when transfer can be made, false otherwise (374ms)
          ✓ should revert when trying to transfer something while _from having nothing (113ms)
          ✓ should revert when trying to transfer more than balance of _from (257ms)
          ✓ should revert when trying to transfer more than allowed (197ms)
          ✓ should not affect totalSupply (283ms)
          ✓ should update balances accordingly (781ms)
          ✓ should update allowances accordingly (531ms)
          ✓ should fire Transfer event (397ms)
          ✓ should fire Transfer event when transferring amount of 0 (96ms)
        when (_from == _to and _to != sender)
          ✓ should return true when called with amount of 0 and sender is approved (48ms)
          ✓ should return true when called with amount of 0 and sender is not approved (50ms)
          ✓ should return true when transfer can be made, false otherwise (554ms)
          ✓ should revert when trying to transfer something while _from having nothing (91ms)
          ✓ should revert when trying to transfer more than balance of _from (225ms)
          ✓ should revert when trying to transfer more than allowed (242ms)
          ✓ should not affect totalSupply (450ms)
          ✓ should update balances accordingly (744ms)
          ✓ should update allowances accordingly (467ms)
          ✓ should fire Transfer event (186ms)
          ✓ should fire Transfer event when transferring amount of 0 (152ms)
        when (_from == _to and _to == sender)
          ✓ should return true when called with amount of 0 and sender is approved (71ms)
          ✓ should return true when called with amount of 0 and sender is not approved (53ms)
          ✓ should return true when transfer can be made, false otherwise (684ms)
          ✓ should revert when trying to transfer something while _from having nothing (114ms)
          ✓ should revert when trying to transfer more than balance of _from (180ms)
          ✓ should revert when trying to transfer more than allowed (268ms)
          ✓ should not affect totalSupply (267ms)
          ✓ should update balances accordingly (602ms)
          ✓ should update allowances accordingly (492ms)
          ✓ should fire Transfer event (150ms)
          ✓ should fire Transfer event when transferring amount of 0 (102ms)
    ERC-20 optional
      name()
        ✓ should return 'Pawtocol Network UPI Token' (43ms)
      symbol()
        ✓ should return 'UPI' (40ms)
      decimals()
        ✓ should return '18' (50ms)
